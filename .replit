modules = ["python-3.11"]

[nix]
channel = "stable-24_05"

[env]
PRODUCTION = "true"
FLASK_DEBUG = "true"

[deployment]
run = "python3 main.py"
build = ["pip", "install", "-r", "requirements.txt"]

[server]
runCommand = "gunicorn --bind 0.0.0.0:5000 --workers 1 --timeout 180 --log-level debug main:app"

[languages.python]
pattern = "**/*.py"
syntax = "python"

[languages.python.languageServer]
start = ["pylsp"]

[unitTest]
language = "python"

args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"

[[workflows.workflow]]
name = "Restart Server"
author = 40702119
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill gunicorn || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"

[[workflows.workflow]]
name = "Production Server"
author = 40702119
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PRODUCTION=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill gunicorn || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 main:app"

[[workflows.workflow]]
name = "Production Server Debug"
author = 40702119
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export PRODUCTION=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "export FLASK_DEBUG=true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill gunicorn || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --workers 1 --timeout 120 --log-level debug --error-logfile - --capture-output --reload main:app"

[[workflows.workflow]]
name = "Production"
author = 40702119
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "source .env.sh"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "pkill gunicorn || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --workers 1 --timeout 180 --log-level debug --error-logfile - --capture-output --reload main:app"

[[ports]]
localPort = 5000
externalPort = 80
